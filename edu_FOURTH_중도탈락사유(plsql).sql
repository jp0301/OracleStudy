

--○ 중도탈락사유 시퀀스 생성
CREATE SEQUENCE TBL_OUT_REASON_SEQ
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 999
NOCYCLE
NOCACHE;
--==>> Sequence TBL_OUT_REASON_SEQ이(가) 생성되었습니다.


--○ 중도탈락사유 등록 프로시저
CREATE OR REPLACE PROCEDURE PRC_OUT_REASON_INSERT
( V_OUT_REASON IN TBL_OUT_REASON.OUT_REASON%TYPE
)
IS
BEGIN
    -- INSERT 쿼리문
    INSERT INTO TBL_OUT_REASON(OUT_REASON_CODE, OUT_REASON)
    VALUES(('OR' || LPAD(TO_CHAR(TBL_OUT_REASON_SEQ.NEXTVAL), 3, '0')), V_OUT_REASON);

    -- 커밋
    COMMIT;
END;
--==>> Procedure PRC_OUT_REASON_INSERT이(가) 컴파일되었습니다.


--○ 중도탈락사유 수정 프로시저
CREATE OR REPLACE PROCEDURE PRC_OUT_REASON_UPDATE
( V_OUT_REASON_CODE IN TBL_OUT_REASON.OUT_REASON_CODE%TYPE
, V_OUT_REASON IN TBL_OUT_REASON.OUT_REASON%TYPE
)
IS
    CHECK_OUT_REASON_CODE TBL_OUT_REASON.OUT_REASON_CODE%TYPE;
    USER_DEFINE_ERROR EXCEPTION;
BEGIN
    
    -- 중도탈락사유코드 체크 여부
    SELECT NVL((SELECT OUT_REASON_CODE 
                FROM TBL_OUT_REASON
                WHERE OUT_REASON_CODE = V_OUT_REASON_CODE),'0') INTO CHECK_OUT_REASON_CODE
    FROM DUAL;
    
    IF (CHECK_OUT_REASON_CODE = '0')
        THEN RAISE USER_DEFINE_ERROR;
    END IF;
    
    
    --UPDATE 쿼리문
    UPDATE TBL_OUT_REASON
    SET OUT_REASON = V_OUT_REASON
    WHERE OUT_REASON_CODE = V_OUT_REASON_CODE;
    
    EXCEPTION
        WHEN USER_DEFINE_ERROR
            THEN RAISE_APPLICATION_ERROR(-20961, '존재하지 않는 사유코드입니다.');
            ROLLBACK;
    
    --커밋
    COMMIT;
END;
--==>> Procedure PRC_OUT_REASON_UPDATE이(가) 컴파일되었습니다.



--○ 중도탈락사유 삭제 프로시저
CREATE OR REPLACE PROCEDURE PRC_OUT_REASON_DELETE
( V_OUT_REASON_CODE IN TBL_OUT_REASON.OUT_REASON_CODE%TYPE
)
IS

    CHECK_OUT_REASON_CODE TBL_OUT_REASON.OUT_REASON_CODE%TYPE;
    CHECK_OUT_REASON_CODE_COUNT TBL_OUT.OUT_CODE%TYPE;
    
    USER_DEFINE_ERROR1 EXCEPTION;
    USER_DEFINE_ERROR2 EXCEPTION;
    
BEGIN
    
    -- 중도탈락사유 테이블에 사유코드가 있는지 체크 여부
    SELECT NVL((SELECT OUT_REASON_CODE 
                FROM TBL_OUT_REASON
                WHERE OUT_REASON_CODE = V_OUT_REASON_CODE),'0') INTO CHECK_OUT_REASON_CODE
    FROM DUAL;
    
    IF (CHECK_OUT_REASON_CODE = '0')
        THEN RAISE USER_DEFINE_ERROR1;
    END IF;
    
    -- 중도탈락 테이블에 사유코드가 쓰여있는지를 체크하는 여부
    SELECT COUNT(*) INTO CHECK_OUT_REASON_CODE_COUNT
    FROM TBL_OUT
    WHERE OUT_REASON_CODE = V_OUT_REASON_CODE;
    
    IF (CHECK_OUT_REASON_CODE_COUNT != 0)
        THEN RAISE USER_DEFINE_ERROR2;
    END IF;
    
    -- DELETE 쿼리문
    DELETE 
    FROM TBL_OUT_REASON
    WHERE OUT_REASON_CODE = V_OUT_REASON_CODE;
    
    EXCEPTION
        WHEN USER_DEFINE_ERROR1
            THEN RAISE_APPLICATION_ERROR(-20961, '존재하지 않는 사유코드입니다.');
            ROLLBACK;
        WHEN USER_DEFINE_ERROR2
            THEN RAISE_APPLICATION_ERROR(-20962, '중도탈락테이블에 입력된 사유코드입니다.');
            ROLLBACK;
    --커밋
    COMMIT;
END;


-- 프로시저 테스트
EXEC PRC_OUT_REASON_INSERT('성적 미달');
EXEC PRC_OUT_REASON_INSERT('자진 탈락');

EXEC PRC_OUT_REASON_UPDATE('OR002','자진 퇴사');


EXEC PRC_OUT_REASON_DELETE('OR003');

-- 중도탈락사유테이블 조회
SELECT *
FROM TBL_OUT_REASON;

